
@{
    ViewBag.Title = "Test";
}

<h2>Test</h2>

<script src="https://knockoutjs.com/downloads/knockout-3.5.1.js"></script>
<style>
    .responded {
        color: green;
    }

    .checking, .unchecked {
        color: #FF8C00;
    }

    .timeout {
        color: red;
    }

    }
</style>

<ul data-bind="foreach:servers">
    <li> <a href="#" data-bind="text:name,attr:{href: 'http://'+name}">tester</a> <span data-bind="text:status,css:status"></span>

    </li>
</ul>

<script>

    function ping(ip, callback) {
        debugger;
        if (!this.inUse) {
            this.status = 'unchecked';
            this.inUse = true;
            this.callback = callback;
            this.ip = ip;
            var _that = this;
            this.img = new Image();
            this.img.onload = function () {
                _that.inUse = false;
                _that.callback('responded');

            };
            this.img.onerror = function (e) {
                if (_that.inUse) {
                    _that.inUse = false;
                    _that.callback('responded', e);
                }

            };
            this.start = new Date().getTime();
            this.img.src = "http://" + ip;
            this.timer = setTimeout(function () {
                if (_that.inUse) {
                    _that.inUse = false;
                    _that.callback('timeout');
                }
            }, 1500);
        }
    }
    var PingModel = function (servers) {
        var self = this;
        var myServers = [];
        ko.utils.arrayForEach(servers, function (location) {
            myServers.push({
                name: location,
                status: ko.observable('unchecked')
            });
        });
        self.servers = ko.observableArray(myServers);
        ko.utils.arrayForEach(self.servers(), function (s) {
            s.status('checking');
            new ping(s.name, function (status, e) {
                s.status(status);
            });
        });
    };
    var komodel = new PingModel(['localhost',
        'ws-bdimperio8',
        '10.10.10.102',
        '10.10.10.103',
        '10.10.10.200',
        '192.168.5.5',
        '127.0.0.1',
        'unknown'
    ]);
    ko.applyBindings(komodel);
</script>